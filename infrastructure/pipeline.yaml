AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploys the Pipeline for the ZGallery Project"

Resources:
  ZGalleryPipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: zgallery-pipeline
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 15
            Id: ExpireAfter15Days
            Status: Enabled

  ZGalleryPipelineBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ZGalleryPipelineBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: s3:PutObject
            Resource: !Join
              - ''
              - - !GetAtt
                  - ZGalleryPipelineBucket
                  - Arn
                - /*
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join
              - ''
              - - !GetAtt
                  - ZGalleryPipelineBucket
                  - Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false

  ZGalleryUnitTestBuildProjectServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildServicePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource: !Sub 'arn:aws:s3:::${ZGalleryPipelineBucket}/*'
              - Effect: Allow
                Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetAuthorizationToken
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Resource: !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/zgallery-backend'
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource:
                  - '*'

  ZGalleryUnitTestBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: build-zgallery-backend
      Artifacts:
        Type: CODEPIPELINE
      Description: Run UnitTests for ZGallery backend
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_REGION
            Value: !Ref 'AWS::Region'
          - Name: AWS_ACCOUNT_ID
            Value: !Ref 'AWS::AccountId'
          - Name: IMAGE_REPO_NAME
            Value: 'zgallery-ecr'
          - Name: APP_NAME
            Value: 'zgallery-backend'
      Source:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt ZGalleryUnitTestBuildProjectServiceRole.Arn

  AppPipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: '{{resolve:ssm:/github/token:1}}'
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/master
      TargetPipeline: !Ref ZGalleryPipeline
      TargetAction: clone-repository
      Name: ZGalleryWebhook
      TargetPipelineVersion: !GetAtt ZGalleryPipeline.Version
      RegisterWithThirdParty: true

  ZGalleryPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: zgallery-pipeline
      RoleArn: !GetAtt ZGalleryPipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ZGalleryPipelineBucket
      Stages:
        - Name: CloneRepository
          Actions:
            - Name: clone-repository
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: '{{resolve:ssm:/github/user:2}}'
                Repo: zgallery
                Branch: master
                OAuthToken: '{{resolve:ssm:/github/token:1}}'
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: CreateInfra
          Actions:
            - Name: create-infra
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: zgallery-infrastructure
                RoleArn: !GetAtt ZGalleryCreateInfraStepPipelineServiceRole.Arn
                Capabilities: CAPABILITY_IAM
                TemplatePath: SourceOutput::infrastructure/zgallery-infra.yaml
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: zgallery-backend-build
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: build-zgallery-backend
              RunOrder: 1
        - Name: DeployDev
          Actions:
              - Name: deploy-dev
                InputArtifacts:
                  - Name: SourceOutput
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: 1
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: zgallery-deploy-dev
                  RoleArn: !GetAtt ZGalleryCreateInfraStepPipelineServiceRole.Arn
                  Capabilities: CAPABILITY_IAM
                  TemplatePath: SourceOutput::infrastructure/deploy.yaml
                  ParameterOverrides: |
                    {
                      "RandomId": { "Fn::GetArtifactAtt" : ["SourceOutput", "ObjectKey"]}
                    }
                RunOrder: 1

  ZGalleryPipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: ZGalleryPipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !GetAtt ZGalleryPipelineBucket.Arn
                  - !Sub '${ZGalleryPipelineBucket.Arn}/*'
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/zgallery-pipeline-*'
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/build-zgallery-backend'

  ZGalleryCreateInfraStepPipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: ZGalleryCloudFormationRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - arn:aws:s3:::zgallery.pictures
              - Effect: Allow
                Action:
                  - ec2:Describe*
                  - ec2:RunInstances
                  - ec2:TerminateInstances
                  - ec2:CreateSecurityGroup
                  - ec2:DeleteSecurityGroup
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:CreateLaunchTemplate
                  - ec2:DeleteLaunchTemplate
                  - ec2:CreateLaunchTemplateVersion
                  - ec2:DeleteLaunchTemplateVersion
                Resource: '*'
              - Effect: Allow
                Action:
                  - elasticloadbalancing:Describe*
                  - elasticloadbalancing:CreateTargetGroup
                  - elasticloadbalancing:ModifyTargetGroup
                  - elasticloadbalancing:DeleteTargetGroup
                  - elasticloadbalancing:CreateLoadBalancer
                  - elasticloadbalancing:DeleteLoadBalancer
                  - elasticloadbalancing:CreateListener
                  - elasticloadbalancing:DeleteListener
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - autoscaling:Describe*
                  - autoscaling:CreateAutoScalingGroup
                  - autoscaling:DeleteAutoScalingGroup
                  - autoscaling:UpdateAutoScalingGroup
                  - autoscaling:CreateLaunchConfiguration
                  - autoscaling:DeleteLaunchConfiguration
                  - autoscaling:AttachLoadBalancerTargetGroups
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                Resource:
                  - arn:aws:ssm:*:*:parameter/aws/service/*
              - Effect: Allow
                Action:
                  - ecr:DescribeRepositories
                  - ecr:CreateRepository
                  - ecr:DeleteRepository
                  - ecr:PutLifecyclePolicy
                Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/zgallery-backend
              - Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:CreateInstanceProfile
                  - iam:DeleteInstanceProfile
                  - iam:AddRoleToInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile
                  - iam:PassRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/zgallery-deploy-dev-ZGalleryInstanceRole-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/zgallery-deploy-dev-ZGalleryInstanceProfile-*
              - Effect: Allow
                Action:
                  - route53:ListHostedZones
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - route53:ListResourceRecordSets
                  - route53:ChangeResourceRecordSets
                  - route53:GetChange
                Resource:
                  - arn:aws:route53:::hostedzone/*
                  - arn:aws:route53:::change/*