AWSTemplateFormatVersion: "2010-09-09"
Description: 'Deploys ZGallery ASG and Instances'

Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  RandomId:
    Type: String
    Default: start

Resources:
  ZGalleryInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: 'zgallery-instance-sg'
      GroupDescription: 'Allow http'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0

  ZGalleryLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      # LaunchConfigurationName: 'zgallery-launch-config'
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref ZGalleryInstanceSecurityGroup
      IamInstanceProfile: !Ref ZGalleryInstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          echo "This is for rolling update ${RandomId}"
          yum update -y
          yum update -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v -c ascending -s ${AWS::StackId} -r ZGalleryLaunchConfiguration --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ZGalleryASG --region ${AWS::Region}
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          ascending:
            - install-docker
            - run-zgallery
        install-docker:
          packages:
            yum:
              docker: []
          services:
            sysvinit:
              docker:
                enabled: "true"
                ensureRunning: "true"
        run-zgallery:
          commands:
            ecr-login:
              command: !Sub "$(aws ecr get-login --region ${AWS::Region} --no-include-email)"
            start-zgallery-backend:
              command: !Sub "docker run -d -p 3000:3000 ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/zgallery-backend"

  ZGalleryASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs
        Ref: 'AWS::Region'
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 2
      LaunchConfigurationName: !Ref ZGalleryLaunchConfiguration
      TargetGroupARNs:
        - !ImportValue zgallery-target-group
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT10M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        PauseTime: PT10M

  ZGalleryInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ZGalleryInstanceRole

  ZGalleryInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
      Policies:
        - PolicyName: ZGalleryInstanceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:*
                Resource:
                 - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/zgallery-backend
                 - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/*
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:ListObjects
                Resource:
                  - !Sub arn:aws:s3:::zgallery.pictures
                  - !Sub arn:aws:s3:::zgallery.pictures/*
