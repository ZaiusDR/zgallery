AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates the Stack for ZGallery Webapp'

Resources:
  ZGalleryDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: CNAME
      Name: zgallery.esuarez.info
      HostedZoneName: esuarez.info.
      Comment: DNS name for ZGallery
      TTL: 300
      ResourceRecords:
        - !GetAtt ZGalleryALB.DNSName

  ZGalleryBackendDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: CNAME
      Name: backend.zgallery.esuarez.info
      HostedZoneName: esuarez.info.
      Comment: DNS name for ZGallery Backend Service
      TTL: 300
      ResourceRecords:
        - !GetAtt ZGalleryALB.DNSName

  ZGalleryDevBackendDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: CNAME
      Name: backend.dev.zgallery.esuarez.info
      HostedZoneName: esuarez.info.
      Comment: DNS name for ZGallery Dev Backend Service
      TTL: 300
      ResourceRecords:
        - !GetAtt ZGalleryALB.DNSName

  ZGalleryFrontendDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: CNAME
      Name: frontend.zgallery.esuarez.info
      HostedZoneName: esuarez.info.
      Comment: DNS name for ZGallery Frontend Service
      TTL: 300
      ResourceRecords:
        - !GetAtt ZGalleryALB.DNSName

  ZGalleryDevFrontendDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: CNAME
      Name: frontend.dev.zgallery.esuarez.info
      HostedZoneName: esuarez.info.
      Comment: DNS name for ZGallery Dev Frontend Service
      TTL: 300
      ResourceRecords:
        - !GetAtt ZGalleryALB.DNSName

  ZGalleryMediaDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: CNAME
      Name: media.esuarez.info
      HostedZoneName: esuarez.info.
      Comment: DNS name for ZGallery Dev Frontend Service
      TTL: 300
      ResourceRecords:
        - !GetAtt ZGalleryCloudFrontDistribution.DomainName

  ZGalleryCloudFrontOriginAccessId:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: zgallery-origin-access-id

  ZGalleryCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - media.esuarez.info
        Enabled: true
        Origins:
        - DomainName: !GetAtt ZGalleryPicturesBucket.DomainName
          Id: zgallery-bucket-origin
          S3OriginConfig:
            OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${ZGalleryCloudFrontOriginAccessId}
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          TargetOriginId: zgallery-bucket-origin
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: '{{resolve:ssm:/acm/certificate/arn:2}}'
          SslSupportMethod: sni-only

  ZGalleryPicturesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: zgallery.pictures
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ZGalleryPicturesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ZGalleryPicturesBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              - !Sub arn:aws:s3:::${ZGalleryPicturesBucket}/*
            Principal:
              CanonicalUser: !GetAtt ZGalleryCloudFrontOriginAccessId.S3CanonicalUserId

  ZGalleryALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: 'zgallery-alb-sg'
      GroupDescription: 'Allow http for ALB'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ZGalleryERC:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: 'zgallery-backend'
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
            {
              "rulePriority": 10,
              "description": "Keep 3 images only",
              "selection":
              {
                "tagStatus": "any",
                "countType": "imageCountMoreThan",
                "countNumber": 3
              },
            "action": { "type": "expire" }
            }]
          }

  ZGalleryFrontendERC:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: 'zgallery-frontend'
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
            {
              "rulePriority": 10,
              "description": "Keep 3 images only",
              "selection":
              {
                "tagStatus": "any",
                "countType": "imageCountMoreThan",
                "countNumber": 3
              },
            "action": { "type": "expire" }
            }]
          }

  ZGalleryALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: zgallery-alb
      SecurityGroups:
        - !GetAtt ZGalleryALBSecurityGroup.GroupId
      Subnets:
        - subnet-0446e35e
        - subnet-5de38815
        - subnet-81e07be7

  ZGalleryALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ZGalleryALBTargetGroup
      LoadBalancerArn: !Ref ZGalleryALB
      Port: 80
      Protocol: HTTP

  ZGalleryRedirectFrontendListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ZGalleryALBTargetGroup
      Conditions:
        - Field: host-header
          HostHeaderConfig:
            Values:
              - !Ref ZGalleryDNS
              - !Ref ZGalleryFrontendDNS
      ListenerArn: !Ref ZGalleryALBListener
      Priority: 20

  ZGalleryRedirectBackendListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ZGalleryBackendALBTargetGroup
      Conditions:
        - Field: host-header
          HostHeaderConfig:
            Values:
              - !Ref ZGalleryBackendDNS
      ListenerArn: !Ref ZGalleryALBListener
      Priority: 30

  ZGalleryALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 5000
      Protocol: HTTP
      TargetType: instance
      VpcId: vpc-f4c2ec92
      HealthCheckPath: /
      HealthyThresholdCount: 2

  ZGalleryBackendALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 3000
      Protocol: HTTP
      TargetType: instance
      VpcId: vpc-f4c2ec92
      HealthCheckPath: /health-check
      HealthyThresholdCount: 2

  ZGalleryCloudTrailBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: zgallery.cloud.trail
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 15
            Id: ExpireAfter15Days
            Status: Enabled

  ZGalleryCloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ZGalleryCloudTrailBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Sub arn:aws:s3:::${ZGalleryCloudTrailBucket}/*
            Principal:
              Service: cloudtrail.amazonaws.com
            Condition:
              StringEquals:
                's3:x-amz-acl': 'bucket-owner-full-control'
          - Effect: Allow
            Action:
              - s3:GetBucketAcl
            Resource:
              - !Sub arn:aws:s3:::${ZGalleryCloudTrailBucket}
            Principal:
              Service: cloudtrail.amazonaws.com

  ZGalleryS3EventsCloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: zgallery-cloud-trail
      IsMultiRegionTrail: false
      IsLogging: true
      S3BucketName: !Ref ZGalleryCloudTrailBucket
      EventSelectors:
        - DataResources:
            - Type: AWS::S3::Object
              Values:
              - !Sub ${ZGalleryPicturesBucket.Arn}/
          ReadWriteType: WriteOnly
    DependsOn:
      - ZGalleryCloudTrailBucketPolicy


Outputs:
  ZGalleryTG:
    Description: ZGallery Target Group
    Value: !Ref ZGalleryALBTargetGroup
    Export:
      Name: zgallery-target-group
  ZGalleryBackendTG:
    Description: ZGallery Backend Target Group
    Value: !Ref ZGalleryBackendALBTargetGroup
    Export:
      Name: zgallery-backend-target-group
  ZGalleryPicturesBucket:
    Description: ZGallery Pictures Bucket Name
    Value: !Ref ZGalleryPicturesBucket
    Export:
      Name: zgallery-pictures-bucket-name